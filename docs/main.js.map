{"version":3,"sources":["./src/app/tasks.service.ts","./src/environments/environment.ts","./src/app/deadline/deadline.component.ts","./src/app/deadline/deadline.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/new/new.component.ts","./src/app/new/new.component.html","./src/app/stats/stats.component.ts","./src/app/stats/stats.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/pomodoro/pomodoro.component.ts","./src/app/pomodoro/pomodoro.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class TasksService {\n    tasks!: any;\n\n    task$!: any;\n\n    constructor() {\n        if (localStorage.getItem('tasks')) {\n            this.tasks = JSON.parse(localStorage.getItem('tasks') as any);\n        } else {\n            this.tasks = [{name: 'Зарядка', time: 0, value: '00:00:00', dead: ''}, {name: 'Учёба', time: 0, value: '00:00:00', dead: ''}, {name: 'Работа', time: 0, value: '00:00:00', dead: ''}];\n        }\n\n        this.task$ = new BehaviorSubject(this.tasks);\n    }\n\n    addTask(task: any) {\n        this.tasks.push(task);\n\n        localStorage.setItem('tasks', JSON.stringify(this.tasks));\n    }\n\n    removeTask(id: number) {\n        this.tasks.splice(id, 1);\n\n        localStorage.setItem('tasks', JSON.stringify(this.tasks));\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport {TasksService} from '../tasks.service';\n\n@Component({\n  selector: 'app-deadline',\n  templateUrl: './deadline.component.html',\n  styleUrls: ['./deadline.component.scss']\n})\nexport class DeadlineComponent {\n  time = '';\n  invalid = false;\n  value!: any;\n  tasks!: any;\n  constructor(private t: TasksService) {}\n  ngOnInit() {\n    this.tasks = this.t.tasks;\n    this.value = this.t.tasks[0];\n  }\n  setTime(t: string): void {\n    this.time = '';\n    this.invalid = !/^(?:2[0-3]|[01]?[0-9]):[0-5][0-9]:[0-5][0-9]$/.test(t);\n    if (this.invalid === false) {\n      if (this.t.tasks.find((t: any) => t.name === this.value.name)) {\n        (this.t.tasks.find((t: any) => t.name === this.value.name) as any).dead = t;\n        localStorage.setItem('tasks', JSON.stringify(this.t.tasks));\n      }\n    }\n  }\n  setCurrentTask(v: string) {\n    this.value = v;\n  }\n}\n","<h2>Ежедневные задания</h2>\n<select name=\"task\" id=\"task\" #t (change)=\"setCurrentTask(t.value)\">\n    <option *ngFor=\"let task of tasks\" [value]=\"task.name\">{{task.name}}</option>\n</select>\n<input type=\"text\" [(ngModel)]=\"time\">\n<button (click)=\"setTime(time)\">Применить время</button>\n<p *ngIf=\"invalid\">Введите верное время</p>\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport {Title} from '@angular/platform-browser';\n\nimport {TasksService} from './tasks.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n  public currentTask!: any;\n  public tasks!: any;\n  public isStart: boolean = true;\n  get getStartButtonStatus(): string {\n    return this.isStart ? 'Начать' : '| |';\n  }\n\n  timer!: any;\n\n  constructor(private title: Title, private tasksService: TasksService) {\n    this.title.setTitle('Time Management App');\n  }\n\n  ngOnInit() {\n    this.tasks = this.tasksService.tasks;\n    this.currentTask = (this.tasks as object[])[0];\n  }\n\n  public setCurrentTask(task: any): void {\n    this.currentTask = this.tasks.find(((t: any) => t.name === task));\n  }\n\n  startTime() {\n    if (!this.isStart) {\n      this.timer = new Date();\n    } else {\n      this.currentTask.time += Math.floor((new Date().getTime() - this.timer.getTime()) / 1000);\n      let data = new Date(0);\n      data.setSeconds(this.currentTask.time);\n      this.currentTask.value = data.toISOString().substr(11, 8);\n      this.tasksService.task$.next(this.tasks);\n    }\n  }\n\n}\n","<div class=\"menu\">\n  <button class=\"btn stats-btn\" routerLink=\"/stats\">\n    Статистика\n  </button>\n  <button class=\"btn new-btn\" routerLink=\"/new\">\n    Новая активность\n  </button>\n  <button class=\"btn technique-btn\" routerLink=\"/pomodoro\">\n    Техника Pomodoro\n  </button>\n  <button class=\"btn deadline-btn\" routerLink=\"/deadline\">\n    Ежедневные задания\n  </button>\n  <select name=\"task\" id=\"task\" #t (change)=\"setCurrentTask(t.value)\">\n    <option *ngFor=\"let task of tasks\" [value]=\"task.name\">{{task.name}}</option>\n  </select>\n  <h1 class=\"app-title\" routerLink=\"/\" style=\"cursor: pointer\">Time Management</h1>\n</div>\n<div class=\"current-activity\">\n  <div class=\"router\">\n    <router-outlet></router-outlet>\n  </div>\n  <div>\n    <button class=\"start-button\" [class.active]=\"!isStart\" (click)=\"isStart = !isStart; startTime()\">{{getStartButtonStatus}}</button>\n  </div>\n</div>","import { Component } from '@angular/core';\n\nimport {TasksService} from '../tasks.service';\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.scss']\n})\nexport class NewComponent {\n  \n  newName!: string;\n\n  constructor(private tasksS: TasksService) { }\n\n  saveNew() {\n    this.tasksS.addTask({\n      name: this.newName,\n      time: 0,\n      value: '00:00'\n    });\n  }\n}\n","<p>Введите название новой задачи:</p>\n<input #d type=\"text\" [(ngModel)]=\"newName\">\n<button (click)=\"saveNew(); d.value = ''\">Сохранить</button>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {ChartComponent} from 'ng-apexcharts';\nimport {\n  ApexNonAxisChartSeries,\n  ApexResponsive,\n  ApexChart\n} from \"ng-apexcharts\";\n\n\nexport type ChartOptions = {\n  series: ApexNonAxisChartSeries;\n  chart: ApexChart;\n  responsive: ApexResponsive[];\n  labels: any;\n};\nimport {TasksService} from '../tasks.service';\n\n@Component({\n  selector: 'app-stats',\n  templateUrl: './stats.component.html',\n  styleUrls: ['./stats.component.scss']\n})\nexport class StatsComponent implements OnInit {\n  tasks!: any;\n  @ViewChild(\"chart\") chart!: ChartComponent;\n  public chartOptions!: Partial<ChartOptions>;\n\n  constructor(private tasksS: TasksService) {\n    this.tasksS.task$.subscribe(() => {\n      console.log(this.tasks)\n      this.setup();\n    });\n  }\n\n  setup() {\n    this.chartOptions = {\n      series: this.tasksS.tasks.map((task: any) => task.time) as any,\n      chart: {\n        width: 380,\n        type: \"pie\"\n      },\n      labels: this.tasksS.tasks.map((task: any) => task.name) as any,\n      responsive: [\n        {\n          breakpoint: 480,\n          options: {\n            chart: {\n              width: 200\n            },\n            legend: {\n              position: \"bottom\"\n            }\n          }\n        }\n      ]}\n  }\n\n  isDead(a: any, b: any) {\n    if (!a || !b) return;\n    const aI = a.split(':');\n    const bI = b.split(':');\n    if (+aI[0] < +bI[0]) {\n      return true;\n    } else if (+aI[1] < +bI[1]) {\n      return true;\n    } else if (+aI[2] < +bI[2]) {\n      return true;\n    }\n    return false;\n  }\n\n  ngOnInit(): void {\n    this.tasks = this.tasksS.tasks;\n\n    this.setup();\n  }\n\n  removeTask(id: number) {\n    this.tasksS.removeTask(id);\n    this.setup();\n  }\n\n}\n","<ul>\n    <li *ngFor=\"let task of tasks; index as id\" [class.dead]=\"isDead(task.value, task.dead)\">\n        {{task.name}} {{task.value}}\n        <span class=\"delete\" (click)=\"removeTask(id)\">X</span>\n    </li>\n</ul>\n<div id=\"chart\">\n    <apx-chart\n      *ngIf=\"chartOptions.series && chartOptions.chart && chartOptions.labels && chartOptions.responsive\"\n      [series]=\"chartOptions.series\"\n      [chart]=\"chartOptions.chart\"\n      [labels]=\"chartOptions.labels\"\n      [responsive]=\"chartOptions.responsive\"\n    ></apx-chart>\n  </div>\n  ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport {NgApexchartsModule} from 'ng-apexcharts';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PomodoroComponent } from './pomodoro/pomodoro.component';\nimport { StatsComponent } from './stats/stats.component';\nimport { NewComponent } from './new/new.component';\nimport {TasksService} from './tasks.service';\nimport { DeadlineComponent } from './deadline/deadline.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PomodoroComponent,\n    StatsComponent,\n    NewComponent,\n    DeadlineComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgApexchartsModule\n  ],\n  providers: [TasksService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {NewComponent} from './new/new.component';\nimport {PomodoroComponent} from './pomodoro/pomodoro.component';\nimport {StatsComponent} from './stats/stats.component';\nimport {DeadlineComponent} from './deadline/deadline.component';\n\nconst routes: Routes = [{\n  path: 'stats', component: StatsComponent\n}, {\n  path: 'pomodoro', component: PomodoroComponent\n}, {\n  path: 'new', component: NewComponent\n}, {\n  path: 'deadline', component: DeadlineComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pomodoro',\n  templateUrl: './pomodoro.component.html',\n  styleUrls: ['./pomodoro.component.scss']\n})\nexport class PomodoroComponent implements OnInit {\n\n  constructor() { }\n  timer!: any;\n\n  timer2!: any;\n  date1!: any;\n  date2!: any;\n\n  warningText!: string | null;\n\n  ourdata!: string;\n\n  ngOnInit(): void {\n  }\n\n  isStarted: boolean = false;\n\n  get text(): string {\n    if (this.isStarted === false) {\n      return 'Старт';\n    } else {\n      return this.ourdata || 'Загружаем данные...';\n    }\n  }\n\n  start() {\n    if (!this.isStarted) {\n      this.timer = setTimeout(() => {\n        clearTimeout(this.timer);\n        this.timer = null;\n        this.isStarted = false;\n        this.warningText = 'Подождите 5 минут и продолжайте работу.';\n        setTimeout(() => {\n          this.warningText = null;\n        }, 5 * 1000 * 60);\n      }, 25 * 1000 * 60);\n\n      this.date1 = new Date();\n      this.date2 = new Date();\n      this.date2.setMinutes(this.date2.getMinutes() + 25);\n\n      this.isStarted = true;\n\n      this.timer2 = setInterval(() => {\n        this.date1 = new Date();\n        let data = new Date(0);\n        data.setSeconds((this.date2.getTime() - this.date1.getTime()) / 1000);\n\n        this.ourdata = data.toISOString().substr(14, 5);\n      }, 1000);\n    }\n  }\n\n}\n","<div>\n<p>Работа по технике Pomodoro</p>\n<button (click)=\"start()\" [class.disabled]=\"warningText\">\n    {{text}}\n</button>\n<p>{{warningText}}</p>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}